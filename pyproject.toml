[build-system]
requires = ["hatchling", "versioningit"]
build-backend = "hatchling.build"

[project]
name = "pyROT"
authors = [
    { name = "Jan-Willem Beenakker" },
    { name = "Lennart Pors" },
    { name = "CornÃ© Haasjes" },
]
maintainers = [{ name = "MReye research group", email = "pyrot@mreye.nl" }]

description = "A Python toolbox for ocular proton therapy planning in RayOcular"
readme = "README.md"
license = { file = "LICENSE.txt" }
keywords = ["RayOcular", "RayStation", "Proton therapy"]
classifiers = [
    "Development Status :: 1 - Planning",
    "Programming Language :: Python :: 3",
]
requires-python = ">=3.6,<3.9"  # RayOcular only supports Python 3.6 and 3.8
dependencies = [
    "numpy",
    "pythonnet>=2.5.2",
]
dynamic = ["version"]

# Hatch configuration

[tool.hatch.version]
source = "versioningit"
default-version = "0.0.0+unknown"

# Testing

[[tool.hatch.envs.hatch-test.matrix]]
python = ["3.6", "3.8"]

# Formatting and linting

[tool.hatch.envs.hatch-static-analysis]
config-path = "ruff_defaults.toml"
dependencies = ["ruff==0.11.0"]

[tool.ruff]
extend = "ruff_defaults.toml"
target-version = "py38"

line-length = 120
extend-include = ["*.ipynb"]
exclude = [
    "Examples/RayOcular_fromMartin",
    "Examples/RaySearchScripts",
]

[tool.ruff.lint]
preview = true
extend-select = [
    "LOG015",  # Root logger call
]
ignore = [
    "RUF009",  # Function as dataclass default
    "EM", # exception messages
    "TRY003", # accept longer exception messages 
    "S101", # accept use of assert as this is of use in RayOcular scripting
    "N806", # TODO: snake_case implementation in next merge request
    "N803", #TODO: snake_case implementation in next merge request
    "N802", #TODO: snake_case implementation in next merge request
    "PYI019"  # typing.Self is not available in Python 3.8
]

[tool.ruff.lint.per-file-ignores]
"tests/**" = [
    "PLC2701",  # Private members
    "PLR6301"
]

[tool.ruff.lint.flake8-pytest-style]
parametrize-names-type = "csv"


[tool.ruff.lint.isort]
required-imports = ["from __future__ import annotations"]

[tool.ruff.lint.pydocstyle]
convention = "numpy"

[tool.ruff.format]
quote-style = "double"
